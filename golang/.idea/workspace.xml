<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a3ccc044-3379-45cd-80bf-803834eca9fa" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/bank.bm.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/bank.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/bank.swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/emp_auth.bm.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/emp_auth.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/emp_auth.swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/employee.bm.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/employee.pb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/api/v1/employee.swagger.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/cmd/cmd" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/configs/application.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/configs/casbin.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/configs/log.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/configs/mysql.toml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/configs/rbac_model.conf" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/app_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/casbin_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/log_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/mysql_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/conf/server_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/service/bank.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/internal/service/employee.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/mail/mail.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/socket/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/goaes/aes.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/goconv/conv.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gofile/file.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gohttp/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gois/is.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gojson/json.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gopath/path.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gosecurity/aes_crypto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gosecurity/md5.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gosecurity/sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gosecurity/wx_sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/goslice/slice.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gostring/string.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gostruct/mapstruct.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/gotime/time.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/regex_check.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/util/tools.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/utime/utime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../appcenter/pkg/xormadapter/adapter.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../go-micro/gRPC/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../kratos-demo/.idea/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../kratos-demo/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../kratos-demo/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../kratos-demo/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../kratos-demo/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/pkg/mod/github.com/bilibili/kratos@v0.2.4-0.20191030045127-e5c9307c0a6e/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/pkg/mod/golang.org/x/sys@v0.0.0-20191029155521-f43be2a4598c/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/cmd/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/internal/conf/app_conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/internal/conf/conf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/internal/model/buy_ad.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/internal/model/otc_coin_assets.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/encoding/encode.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/gopath/path.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/httputil/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/jsonutil/json.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/mail/mail.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/mapstruct/mapstruct.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/security/aes_crypto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/security/md5.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/security/sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/security/wx_sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/socket/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/stringutils/strings.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/time/utime/utime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/time/xtime/xtime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/utils/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/utils/regex_check.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/bitz/pkg/utils/tools.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/cmd/main.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/go.mod" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/encoding/encode.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/gopath/path.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/httputil/http.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/jsonutil/json.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/mail/mail.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/mapstruct/mapstruct.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/security/aes_crypto.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/security/md5.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/security/sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/security/wx_sign.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/socket/client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/stringutils/strings.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/time/utime/utime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/time/xtime/xtime.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/utils/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/utils/regex_check.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../../mygo/src/cloudspeaker/pkg/utils/tools.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../../docker/nginx_images/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../docker/nginx_images/index.html" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../docker/nginx_images/nginx.conf" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/gotest/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/DB/base_dao.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/DB/datasource.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/conf/app_conf.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/conf/conf.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/conf/mysql_conf.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/configs/mysql.toml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/model/model.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/model/student.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/encoding/encode.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/gopath/path.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/httputil/http.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/jsonutil/json.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/mail/mail.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/mapstruct/mapstruct.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/security/aes_crypto.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/security/md5.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/security/sign.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/security/wx_sign.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/socket/client.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/stringutils/strings.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/time/utime/utime.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/time/xtime/xtime.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/utils/error.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/utils/regex_check.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../../mygo/src/helloword/pkg/utils/tools.go" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="ProjectId" id="1Tb4XONkRmVBmOsZXR5vnbGuLeV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable.Global.GOPATH.is.expanded" value="true" />
    <property name="configurable.Module.GOPATH.is.expanded" value="false" />
    <property name="configurable.Project.GOPATH.is.expanded" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="watcher.settings" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="hello" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.io</proxy>
  </component>
</project>